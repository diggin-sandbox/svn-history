<?php
require_once 'PHPUnit/Framework.php';

require_once 'Diggin/Scraper/Helper/Simplexml/HeadBaseHref.php';
require_once 'Zend/Uri/Http.php';

/**
 * Test class for Diggin_Scraper_FindHelper_HeadBase.
 * Generated by PHPUnit on 2009-01-18 at 06:25:09.
 */
class Diggin_Scraper_Helper_Simplexml_HeadBaseHrefTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Diggin_Scraper_FindHelper_HeadBase
     * @access protected
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
    	$expect = 'http://www2.example.net/terumi/';
            $responseBodyWithHeadTag1 = '<html lang="ja">'.PHP_EOL.
                           '<head>'.PHP_EOL.
                           '<base href="http://www.example.net/" />'.
                           "<base href=\"$expect\" />".
                           '<base href="file://var/www/" />'.
                           '</head>'.
                           '<body>'.PHP_EOL.
                           '<a href="test/test.html">testlink</a><br /><br />'.PHP_EOL.
                           '</body>'.PHP_EOL.
                           '</html>';
        
        $simplexml = simplexml_load_string($responseBodyWithHeadTag1);
        
        $this->object = new Diggin_Scraper_Helper_Simplexml_HeadBaseHref($simplexml);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testHeadBase().
     */
    public function testHeadBase() {
        
        $expect = 'http://www2.example.net/terumi/';

        $this->assertEquals(Zend_Uri_Http::fromString($expect),
                            $this->object->direct());
                            
                            
        $expect = 'http://www2.example.net/terumi/';
        
        /////////////////////////
        $responseBodyWithNotHead = '<html lang="ja">'.PHP_EOL.
                           '<head>'.PHP_EOL.
                           '</head>'.
                           '<body>'.PHP_EOL.
                           '<a href="test/test.html">testlink</a><br /><br />'.PHP_EOL.
                           '</body>'.PHP_EOL.
                           '</html>';
        
        $simplexml = simplexml_load_string($responseBodyWithNotHead);
        
        $object = new Diggin_Scraper_Helper_Simplexml_HeadBaseHref($simplexml);
        
        $this->assertEquals(false,
                            $object->direct());
                            
                            
        $expect = 'http://www2.example.net/terumi/';
        
    
        $withHeadNotValid = <<<HTML
<html>
    <head>
    <title>TERUMIの部屋</title>
    <base href="file:///Program fils\" />
    <base href="A:\yoshiko\homepage\" />
    <base href="A:\yoshiko\homepage\" />
    </head>
<body>
神戸では紫芋チップスが流行っています。
</body>
</html>
HTML;
        
        $simplexml = simplexml_load_string($withHeadNotValid);
        
        $object = new Diggin_Scraper_Helper_Simplexml_HeadBaseHref($simplexml);
        
        $this->assertEquals(false,
                            $object->direct());
        
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
