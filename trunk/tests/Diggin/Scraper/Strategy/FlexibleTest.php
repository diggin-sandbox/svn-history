<?php
require_once 'PHPUnit/Framework.php';

require_once 'Zend/Http/Response.php';
require_once 'Diggin/Scraper/Strategy/Flexible.php';
require_once 'Diggin/Scraper/Process.php';

/**
 * Test class for Diggin_Scraper_Strategy_Flexible.
 * Generated by PHPUnit on 2009-01-18 at 06:23:01.
 */
class Diggin_Scraper_Strategy_FlexibleTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Diggin_Scraper_Strategy_Flexible
     * @access protected
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        $responseHeader200 = "HTTP/1.1 200 OK\r\nContent-type: text/html";
        $responseBody = <<<BODY
<html><body>123aaa„ÅÇ</body></html>
BODY;
        $response = Zend_Http_Response::fromstring("$responseHeader200\r\n\r\n$responseBody");
        $this->object = new Diggin_Scraper_Strategy_Flexible($response);
        $this->object->setAdapterConfig(array('url' => 'http://base.example.net/test/'));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement test__destruct().
     */
    public function test__destruct() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetAdapter().
     */
    public function testSetAdapter() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetAdapterConfig().
     */
    public function testSetAdapterConfig() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetAdapter().
     */
    public function testGetAdapter() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testScrape().
     */
    public function testScrape() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testExtract().
     */
    public function testExtract() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetValue().
     */
    public function testGetValue() {
        $simplxml = simplexml_load_string('<html><body><a href="index.html" class="sample">test</a></body></html>');
//        var_dump($simplxml->xpath('//a'));
        $process01 = new Diggin_Scraper_Process('//a', 'attr', true, '@href');
        //require_once 'Diggin/Uri/Http.php';var_dump(Diggin_Uri_Http::getAbsoluteUrl('index.html', 'http://test.org/'));
        $ret = $this->object->getValue((array)$simplxml->xpath($process01->expression), $process01);
        $this->assertEquals($ret[0], "http://base.example.net/test/index.html");
        
        $process02 = new Diggin_Scraper_Process('//a', 'attr', true, '@class');
        
        $ret = $this->object->getValue((array)$simplxml->xpath($process02->expression), $process02);
        $this->assertEquals($ret[0], "sample");
        
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
